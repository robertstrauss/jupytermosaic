/** 
 * defines the gap width variable, which is the size of the margins between cells where cells can be dropped to place them
 */
:root {
    --gap-width: 10px;
}

/** 
 * makes the contianer of the cells wider, so there's more room,
 * and sets it to negative z-index so it doesn't capture all the mouse events
 */
#notebook-container {
    width: 95%;
    z-index: -5
}

/** mosaicgroups are flex so all the cells are squeezed into a row or column */
.mosaicgroup {
    display: flex;
    position: relative;
    border: 3px dotted red;
}
/** hide empty groups so they don't make blank gaps if they somehow get left there */
.mosaicgroup:empty {
    display: none;
}
/** 
 * makes cells and mosaic groups the same size, with gaps between them, and not overflow 
 * z-index is to make them capture the mouse events so they know when something is dragging over them
 */
.cell, .mosaicgroup {
    min-width: 0;
    width: unset !important;
    flex: 1 1 0px;
    margin: var(--gap-width) !important;
    z-index: 2;
}
/* * when hovering over a mosaicgroup it changed its background slightly so the execution order can be seen
.mosaicgroup:hover {
    background-color: rgba(0,0,0,0.2);
} */
/** rows are rows, and don't need to leave extra space on the sides for dropping */
.mosaicrow {
    flex-direction: row;
    margin-left: 0 !important;
    margin-right: 0 !important;
}
/** cols are columnss, and don't need to leave extra space on the top and bottom for dropping */
.mosaiccol {
    flex-direction: column;
    margin-top: 0 !important;
    margin-bottom: 0 !important;
}

/** takes away white middle column so cells are floating in the grey area */
#notebook-container {
    background: transparent;
    box-shadow: none;
}
/** makes cells floating things with round corners */
div.cell {
    background: white;
    box-shadow: 0px 3px 10px 1px rgba(0,0,0,0.5);
    border-radius: 10px !important;
}


/** make the input prompt (In [ ]) and output prompt (Out [ ]) above the input and output rather than beside */
.cell > .input, .output > .output_area {
    flex-direction: column !important;
}
/** 
 * make the output view full width of the cell 
 * (it usually leaves room for the output prompt, but we are putting that on top instead)
 */
.output_subarea {
    max-width: 100% !important;
}
/** makes the input prompt or blank area of markdown cells clickable with z-index, so it can be dragged there, and full size */
.input_prompt {
    position: absolute;
    width: 100%;
    height: 100%;
    z-index: 2;
}
/** styles the input prompt of code cells only, making it bigger and on the top rather than side */
.prompt_container > .input_prompt {
    text-align: left;
    position: relative;
    height: 2.8rem;
    width: 100%;
}

/** puts the output prompt's overlay big and on the top rather than side just like the output prompt itself */
.out_prompt_overlay {
    width: 100%;
    height: 2.8rem;
}

/**
 * the after psuedo elements of cells and mosaicgroups are for captuing mouseevents outside the element itself,
 * so when the mouse is dragging a cell near one of them it can detect it.
 * they also are used to highlight where the cell will go when dropped by changing the border color.
 */
.cell::after, .mosaicgroup::after {
    display: inline-block;
    flex: 0 0 auto;
    content: "";
    position: absolute;
    background: transparent;
    top: calc(var(--gap-width)*-1);
    left: calc(var(--gap-width)*-1);
    width: 100%;
    height: 100%;
    border: var(--gap-width) solid transparent;
    box-sizing: content-box;
    z-index: 1;
}
/** when the mouse is hovering by the top highlight the top edge to show where the cell will go when dropped */
[data-hoverside=top]::after {
    border-top-color: lightblue;
}
/** when the mouse is hovering by the left highlight the left edge to show where the cell will go when dropped */
[data-hoverside=left]::after {
    border-left-color: lightblue;
}
/** when the mouse is hovering by the bottom highlight the bottom edge to show where the cell will go when dropped */
[data-hoverside=bottom]::after {
    border-bottom-color: lightblue;
}
/** when the mouse is hovering by the right highlight the right edge to show where the cell will go when dropped */
[data-hoverside=right]::after {
    border-right-color: lightblue;
}

/** decrease opacity and give cells extra shadow when being dragged, to make it clear they are being dragged */
.mosaicdragging {
    position: absolute;
    box-shadow: 0px 5px 20px 0px black;
    opacity: 0.6;
    background: white;
    z-index: 2;
}

